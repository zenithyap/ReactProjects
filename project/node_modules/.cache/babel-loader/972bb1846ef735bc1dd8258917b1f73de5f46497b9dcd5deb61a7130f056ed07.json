{"ast":null,"code":"var _jsxFileName = \"/workspaces/ReactProjects/project/src/pages/Record.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport NavigationBar from \"./NavigationBar\";\nimport './text.css';\nimport { useState, useEffect, useRef } from \"react\";\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useRecord() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const getEntriesFromStorage = () => JSON.parse(window.localStorage.getItem('recordEntries'));\n\n  // need to stringify item before parsing and storing to local storage\n  // React Hook useEffect contains a call to 'setEntries'. \n  // Without a list of dependencies, this can lead to an infinite \n  // chain of updates. To fix this, pass [] as a second argument to \n  // the useEffect Hook\n  const setEntriesToStorage = items => window.localStorage.setItem('recordEntries', JSON.stringify(items));\n  useEffect(() => {\n    const entriesFromStorage = getEntriesFromStorage();\n    if (entriesFromStorage) {\n      setEntries(entriesFromStorage);\n    }\n  }, []);\n  const storeEntry = entry => {\n    const newEntries = [entry, ...entries];\n    setEntries(newEntries);\n    setEntriesToStorage(newEntries);\n  };\n  const deleteEntry = index => {\n    const newEntries = [...entries.slice(0, index), ...entries.slice(index + 1)];\n    setEntries(newEntries);\n    setEntriesToStorage(newEntries);\n  };\n  return [entries, storeEntry, deleteEntry];\n}\n_s(useRecord, \"si2ZVsazrWomTuBdDT2zYRo3CE0=\");\nfunction EntryList(_ref) {\n  let {\n    list,\n    deleteEntry\n  } = _ref;\n  // why got => e ?\n  // Higher order delete entry click handler\n  const handleDeleteEntry = index => e => {\n    deleteEntry(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entry-list\",\n    children: list && list.map((item, i) => {\n      const itemDate = Moment(item.date).format('L');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: itemDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text>\",\n            children: item.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: handleDeleteEntry(i),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n// useRef.current.focus() purpose?\n_c = EntryList;\nfunction Entry(_ref2) {\n  _s2();\n  let {\n    addEntry\n  } = _ref2;\n  const [message, setMessage] = useState(\"\");\n  const fieldRef = useRef();\n  const handleOnChange = e => setMessage(e.target.value);\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    if (message && message.trim().length > 0) {\n      addEntry({\n        message,\n        date: Date.now()\n      });\n    }\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleOnSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: message,\n        onChange: handleOnChange,\n        type: \"text\",\n        ref: fieldRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: message.trim().length === 0,\n        className: \"btn btn-success form-control\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s2(Entry, \"Cfaksk3k9ouzdwwNg4RYIdpAdCA=\");\n_c2 = Entry;\nexport default function Record() {\n  _s3();\n  const [entries, storeEntry, deleteEntry] = useRecord();\n  const handleStoreEntry = entry => storeEntry(entry);\n  const handleDeleteEntry = index => deleteEntry(index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Entry, {\n        addEntry: handleStoreEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s3(Record, \"rVR6QjXutLPZcueOO/jKaI6ew0U=\", false, function () {\n  return [useRecord];\n});\n_c3 = Record;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"EntryList\");\n$RefreshReg$(_c2, \"Entry\");\n$RefreshReg$(_c3, \"Record\");","map":{"version":3,"names":["NavigationBar","useState","useEffect","useRef","Moment","useRecord","entries","setEntries","getEntriesFromStorage","JSON","parse","window","localStorage","getItem","setEntriesToStorage","items","setItem","stringify","entriesFromStorage","storeEntry","entry","newEntries","deleteEntry","index","slice","EntryList","list","handleDeleteEntry","e","map","item","i","itemDate","date","format","message","Entry","addEntry","setMessage","fieldRef","handleOnChange","target","value","handleOnSubmit","preventDefault","trim","length","Date","now","Record","handleStoreEntry"],"sources":["/workspaces/ReactProjects/project/src/pages/Record.js"],"sourcesContent":["import NavigationBar from \"./NavigationBar\";\nimport './text.css'\nimport { useState, useEffect, useRef } from \"react\"\nimport Moment from 'react-moment'\n\nfunction useRecord() {\n    const [entries, setEntries] = useState([])\n\n    const getEntriesFromStorage = () => JSON.parse(\n        window.localStorage.getItem('recordEntries')\n    )\n\n    // need to stringify item before parsing and storing to local storage\n    // React Hook useEffect contains a call to 'setEntries'. \n    // Without a list of dependencies, this can lead to an infinite \n    // chain of updates. To fix this, pass [] as a second argument to \n    // the useEffect Hook\n    const setEntriesToStorage = items => \n        window.localStorage.setItem('recordEntries', JSON.stringify(items))\n        useEffect(() => {\n            const entriesFromStorage = getEntriesFromStorage()\n            if (entriesFromStorage) {\n                setEntries(entriesFromStorage)\n            }\n        }, [])\n    \n    const storeEntry = entry => {\n        const newEntries = [entry, ...entries]\n        setEntries(newEntries)\n        setEntriesToStorage(newEntries)\n    }\n\n    const deleteEntry = index => {\n        const newEntries = [...entries.slice(0, index), ...entries.slice(index+1)]\n        setEntries(newEntries)\n        setEntriesToStorage(newEntries)\n    }\n\n    return [entries, storeEntry, deleteEntry]\n}\n\nfunction EntryList({list, deleteEntry}) {\n    // why got => e ?\n    // Higher order delete entry click handler\n    const handleDeleteEntry = index => e => {\n        deleteEntry(index)\n    }\n\n    return (\n        <div className='entry-list'>\n            {\n                list && list.map((item, i) => {\n                    const itemDate = Moment(item.date).format('L')\n                    return (\n                        <div className='card'>\n                            <div className='card-body dark'>\n                                <h4 className='card-title'>{itemDate}</h4>\n                                <p className='card-text>'>{item.message}</p>\n                                <button className='btn' onClick={handleDeleteEntry(i)}>Delete</button>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\n// useRef.current.focus() purpose?\nfunction Entry({addEntry}) {\n    const [message, setMessage] = useState(\"\")\n    const fieldRef = useRef()\n    const handleOnChange = e => setMessage(e.target.value)\n    const handleOnSubmit = e => {\n        e.preventDefault()\n        if (message && message.trim().length > 0) {\n            addEntry({\n                message,\n                date: Date.now()\n            })\n        }\n        setMessage(\"\")\n    }\n\n    return (\n        <form onSubmit={handleOnSubmit}>\n            <div className=\"form-group\">\n                <textarea\n                    className=\"form-control\"\n                    value={message}\n                    onChange={handleOnChange}\n                    type=\"text\"\n                    ref={fieldRef}\n                />\n                <button disabled={message.trim().length === 0}\n                    className=\"btn btn-success form-control\" type=\"submit\">\n                        Submit\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default function Record() {\n    const [entries, storeEntry, deleteEntry] = useRecord();\n    const handleStoreEntry = (entry) => storeEntry(entry)\n    const handleDeleteEntry = (index) => deleteEntry(index)\n    return (\n        <div className=\"bg\">\n            <NavigationBar/>\n            <div className=\"container\">\n                <h1 className='title'>\n                    Record\n                </h1>\n                <Entry addEntry={handleStoreEntry}/>\n                \n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}